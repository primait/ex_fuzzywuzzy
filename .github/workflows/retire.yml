on:
  workflow_dispatch:
    inputs:
      reason:
        description: Retire reason
        required: true
        default: invalid
        type: choice
        options:
          - renamed
          - deprecated
          - security
          - invalid
          - other
      message:
        description: Retire message
        required: true
        default: Version has a breaking bug
        type: string

jobs:
  retire:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Extract version from tag
        id: extract_version
        run: |
          echo "Version: $VERSION"
          
          if [[ ! "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "The workflow must be run from a tag that follows semantic versioning format (1.2.3)"
            exit 1
          fi
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        env:
          VERSION: ${{ github.ref_name }}
      - name: Validate message input
        run: |
          # Check message length (max 140 characters)
          if [ "$MESSAGE" -gt 140 ]; then
            echo "Error: Message must not be longer than 140 characters"
            exit 1
          fi
          
          # Check message contains only letters, numbers, spaces and periods
          if [[ ! "$MESSAGE" =~ ^[a-zA-Z0-9\.\ ]+$ ]]; then
            echo "Error: Message must contain only letters, numbers, spaces, and periods"
            exit 1
          fi
        env:
          MESSAGE: ${{ inputs.message }}
      - uses: erlef/setup-beam@v1
        with:
          otp-version: '24'
          elixir-version: '1.13'
      - name: Display retirement info
        run: echo "Attempting to retire version $VERSION"
        env:
          VERSION: ${{ steps.extract_version.outputs.version }}
      - name: Configure Hex API key
        run: mix hex.config api_key "$HEX_API_KEY"
        env:
          HEX_API_KEY: ${{ secrets.HEX_AUTH_KEY }}
      - run: mix hex.user whoami
      - name: Retire package version
        run: mix hex.retire ex_fuzzywuzzy "$VERSION" "$REASON" --message "$MESSAGE"
        env:
          VERSION: ${{ steps.extract_version.outputs.version }}
          REASON: ${{ inputs.reason }}
          MESSAGE: ${{ inputs.message }}
